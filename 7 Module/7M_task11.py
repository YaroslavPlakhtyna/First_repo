"""Як ви знаєте, раніше телефони були з кнопками, та й зараз вони є подекуди у вжитку.
Тоді текстові повідомлення набиралися за допомогою цифрових кнопок.
Як інженери телефонів створили набір тексту? 
Рішення було в тому, що одна кнопка була асоційована одночасно з декількома літерами,
а вибір залежав від кількості натискань на кнопку. Одноразове натискання призводило до появи першої літери 
у відповідному цій кнопці списку, наступні натискання змінювали її на наступну.

Символи, що відповідають кнопкам на телефонах

Кнопка	Символи
1	. , ? ! :
2	A B C
3	D E F
4	G H I
5	J K L
6	M N O
7	P Q R S
8	T U V
9	W X Y Z
0	Пробіл

Напишіть функцію sequence_buttons, що показує послідовність кнопок,
яку необхідно натиснути, щоб на екрані телефону з'явився текст, введений користувачем.

Створіть словник, який відповідає символам з кнопками, які потрібно натиснути.

Приклад: якщо функції sequence_buttons передати рядок "Hello, World!",
функція повинна повернути "4433555555666110966677755531111".

Вимоги:

- функція коректно обробляє малі та великі літери.
- функція ігнорує символи, що не входять до зазначеного списку"""

def sequence_buttons(string):
    button_mapping = {
        '1': ['.', ',', '?', '!', ':'],
        '2': ['A', 'B', 'C'],
        '3': ['D', 'E', 'F'],
        '4': ['G', 'H', 'I'],
        '5': ['J', 'K', 'L'],
        '6': ['M', 'N', 'O'],
        '7': ['P', 'Q', 'R', 'S'],
        '8': ['T', 'U', 'V'],
        '9': ['W', 'X', 'Y', 'Z'],
        '0': [' ']
    }

    result = ""
    for char in string:
        char_upper = char.upper()
        for button, chars in button_mapping.items():
            if char_upper in chars:
                result += button * (chars.index(char_upper) + 1)

    return result

input_text = "Hello, World!"
output_sequence = sequence_buttons(input_text)
print(output_sequence)
    