"""Є чотирикутна схема польотів дронів з координатами (0, 1, 2, 3).
У нас є словник points, ключі якого — кортежі, точки польоту між координатами чотирикутника,
вигляду (1, 2). Значення словника — це відстані між вказаними точками.

Приклад:

points = {(0, 1): 2, (0, 2): 3.8, (0, 3): 2.7, (1, 2): 2.5, (1, 3): 4.1, (2, 3): 3.9}
Напишіть функцію calculate_distance, яка на вхід приймає список координат чотирикутника зі словника виду
 [0, 1, 3, 2, 0]. Функція повинна підрахувати, використовуючи вказаний словник,
 яку загальну відстань пролетить дрон, рухаючись між точками польоту.

Примітки:

коли беремо у словника points значення, у ключі кортежі завжди має бути першою координата
 з меншим значенням — (2, 3), але не (3, 2);
для порожнього списку та списку з однією координатою функція calculate_distance має повертати 0.
"""
# ментор розбирав Модуль6 -> уроки -> додаткова практика -> 36:00

points = {(0, 1): 2, (0, 2): 3.8, (0, 3): 2.7, (1, 2): 2.5, (1, 3): 4.1, (2, 3): 3.9}
# [0, 1, 2, 3] (0, 1), (1, 2) (2, 3)
#[1, 0, 2, 3] (0, 1), (0, 2), (2, 3)
# [6, 5, 3, 2] (5, 6) (3, 5) (2, 3)
def calculate_distance(coordinates):
    pairs = []
    for index in range(len(coordinates) - 1):
        print(index)
        pair = tuple(sorted((coordinates[index], coordinates[index + 1])))
        pairs.append(pair)
    distance = 0
    for pair in pairs:
        distance += points.get(pair, 0)
    return distance

calculate_distance([0, 1, 3, 2, 0])